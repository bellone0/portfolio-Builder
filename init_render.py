#!/usr/bin/env python3
"""
Script d'initialisation pour Render
Cr√©e les tables de base de donn√©es et ajoute des donn√©es de d√©monstration
"""

import os
import sys
from app import app, db
from models import User, Portfolio, Project, Experience, Education, Skill
from werkzeug.security import generate_password_hash
import secrets
from datetime import datetime

def init_database():
    """Initialiser la base de donn√©es"""
    print("üóÑÔ∏è Initialisation de la base de donn√©es...")
    
    with app.app_context():
        # Cr√©er toutes les tables
        db.create_all()
        print("‚úÖ Tables cr√©√©es avec succ√®s")
        
        # V√©rifier si des utilisateurs existent d√©j√†
        if User.query.first():
            print("‚ÑπÔ∏è Des utilisateurs existent d√©j√†, pas d'ajout de donn√©es de d√©monstration")
            return
        
        # Cr√©er un utilisateur de d√©monstration
        demo_user = User(
            username='demo',
            email='demo@example.com',
            first_name='Demo',
            last_name='User',
            password_hash=generate_password_hash('demo123')
        )
        db.session.add(demo_user)
        db.session.commit()
        
        # Cr√©er un portfolio pour le d√©mo
        demo_portfolio = Portfolio(
            user_id=demo_user.id,
            public_url='demo-portfolio',
            bio='Portfolio de d√©monstration - Portfolio Builder',
            location='Paris, France',
            website='https://example.com',
            linkedin='https://linkedin.com/in/demo',
            github='https://github.com/demo',
            is_public=True,
            views_count=0
        )
        db.session.add(demo_portfolio)
        db.session.commit()
        
        # Ajouter des projets de d√©monstration
        projects_data = [
            {
                'title': 'Application Web Portfolio',
                'description': 'Application de cr√©ation de portfolios professionnels',
                'technologies': '["Python", "Flask", "SQLAlchemy", "TailwindCSS"]',
                'github_url': 'https://github.com/demo/portfolio-builder',
                'live_url': 'https://portfolio-builder.onrender.com',
                'order_index': 1
            },
            {
                'title': 'API REST',
                'description': 'API RESTful pour la gestion des donn√©es',
                'technologies': '["Python", "Flask", "SQLAlchemy", "JSON"]',
                'github_url': 'https://github.com/demo/api-rest',
                'live_url': 'https://api-demo.onrender.com',
                'order_index': 2
            }
        ]
        
        for project_data in projects_data:
            project = Project(
                portfolio_id=demo_portfolio.id,
                **project_data
            )
            db.session.add(project)
        
        # Ajouter des exp√©riences de d√©monstration
        experiences_data = [
            {
                'title': 'D√©veloppeur Full Stack',
                'company': 'Tech Company',
                'location': 'Paris, France',
                'start_date': datetime(2023, 1, 1),
                'end_date': None,
                'description': 'D√©veloppement d\'applications web modernes',
                'order_index': 1
            },
            {
                'title': 'D√©veloppeur Python',
                'company': 'Startup Inc',
                'location': 'Lyon, France',
                'start_date': datetime(2022, 6, 1),
                'end_date': datetime(2022, 12, 31),
                'description': 'D√©veloppement backend avec Python et Flask',
                'order_index': 2
            }
        ]
        
        for exp_data in experiences_data:
            experience = Experience(
                portfolio_id=demo_portfolio.id,
                **exp_data
            )
            db.session.add(experience)
        
        # Ajouter des formations de d√©monstration
        education_data = [
            {
                'degree': 'Master en Informatique',
                'institution': 'Universit√© de Paris',
                'location': 'Paris, France',
                'start_date': datetime(2020, 9, 1),
                'end_date': datetime(2022, 6, 30),
                'description': 'Sp√©cialisation en d√©veloppement web',
                'order_index': 1
            },
            {
                'degree': 'Licence Informatique',
                'institution': 'Universit√© de Lyon',
                'location': 'Lyon, France',
                'start_date': datetime(2018, 9, 1),
                'end_date': datetime(2020, 6, 30),
                'description': 'Formation g√©n√©rale en informatique',
                'order_index': 2
            }
        ]
        
        for edu_data in education_data:
            education = Education(
                portfolio_id=demo_portfolio.id,
                **edu_data
            )
            db.session.add(education)
        
        # Ajouter des comp√©tences de d√©monstration
        skills_data = [
            {'name': 'Python', 'level': 90, 'category': 'Langages', 'order_index': 1},
            {'name': 'Flask', 'level': 85, 'category': 'Frameworks', 'order_index': 2},
            {'name': 'SQLAlchemy', 'level': 80, 'category': 'ORM', 'order_index': 3},
            {'name': 'JavaScript', 'level': 75, 'category': 'Langages', 'order_index': 4},
            {'name': 'HTML/CSS', 'level': 85, 'category': 'Frontend', 'order_index': 5},
            {'name': 'Git', 'level': 80, 'category': 'Outils', 'order_index': 6}
        ]
        
        for skill_data in skills_data:
            skill = Skill(
                portfolio_id=demo_portfolio.id,
                **skill_data
            )
            db.session.add(skill)
        
        db.session.commit()
        print("‚úÖ Donn√©es de d√©monstration ajout√©es avec succ√®s")
        print("üë§ Utilisateur de d√©mo cr√©√© :")
        print("   - Email: demo@example.com")
        print("   - Mot de passe: demo123")
        print("   - Portfolio: https://votre-app.onrender.com/p/demo-portfolio")

if __name__ == '__main__':
    init_database()
